{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\nlet countdownDate;\nconst btn = document.querySelector(\"[data-start]\");\nbtn.setAttribute('disabled', \"\");\n\nflatpickr(\"#datetime-picker\", {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose: function (selectedDates) {\n    const currentDate = new Date();\n    const selectedDate = selectedDates[0]\n    if (selectedDate >= currentDate) {\n      btn.removeAttribute('disabled');\n      countdownDate = selectedDate;\n    } else {\n      iziToast.show({\n        position: \"topRight\",\n        messageColor: 'White',\n        message: \"❌ Please choose a date in the future\",\n        backgroundColor: \"#CC0000\",\n        transitionIn: \"fadeIn\",\n        animateInside: false,\n      })\n    }\n  }\n});\n\nbtn.addEventListener(\"click\", btnStartFoo);\n\nfunction btnStartFoo() {\n  btn.setAttribute('disabled', \"\");\n  setInterval(() => {\n    const now = new Date();\n    convertMs(countdownDate.getTime() - now.getTime());\n  }, 1000);\n  convertMs(countdownDate.getTime() - new Date().getTime()); \n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\n\nfunction convertMs(ms) {\n  if (ms < 0) {\n    clearInterval();\n    return;\n  }\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = addLeadingZero(Math.floor(ms / day));\n  const hours = addLeadingZero(Math.floor((ms % day) / hour));\n  const minutes = addLeadingZero(Math.floor(((ms % day) % hour) / minute));\n  const seconds = addLeadingZero(Math.floor((((ms % day) % hour) % minute) / second));\n\n  const timerDays = document.querySelector(\"[data-days]\");\n  const timerHours = document.querySelector(\"[data-hours]\");\n  const timerMinutes = document.querySelector(\"[data-minutes]\");\n  const timerSeconds = document.querySelector(\"[data-seconds]\");\n  timerDays.textContent = days;\n  timerHours.textContent = hours;\n  timerMinutes.textContent = minutes;\n  timerSeconds.textContent = seconds;\n}\n"],"names":["countdownDate","btn","flatpickr","selectedDates","currentDate","selectedDate","iziToast","btnStartFoo","now","convertMs","addLeadingZero","value","ms","second","minute","hour","day","days","hours","minutes","seconds","timerDays","timerHours","timerMinutes","timerSeconds"],"mappings":"2GAMA,IAAIA,EACJ,MAAMC,EAAM,SAAS,cAAc,cAAc,EACjDA,EAAI,aAAa,WAAY,EAAE,EAE/BC,EAAU,mBAAoB,CAC5B,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAS,SAAUC,EAAe,CAChC,MAAMC,EAAc,IAAI,KAClBC,EAAeF,EAAc,CAAC,EAChCE,GAAgBD,GAClBH,EAAI,gBAAgB,UAAU,EAC9BD,EAAgBK,GAEhBC,EAAS,KAAK,CACZ,SAAU,WACV,aAAc,QACd,QAAS,uCACT,gBAAiB,UACjB,aAAc,SACd,cAAe,EACvB,CAAO,CAEJ,CACH,CAAC,EAEDL,EAAI,iBAAiB,QAASM,CAAW,EAEzC,SAASA,GAAc,CACrBN,EAAI,aAAa,WAAY,EAAE,EAC/B,YAAY,IAAM,CAChB,MAAMO,EAAM,IAAI,KAChBC,EAAUT,EAAc,QAAO,EAAKQ,EAAI,QAAS,CAAA,CAClD,EAAE,GAAI,EACPC,EAAUT,EAAc,QAAS,EAAG,IAAI,KAAM,EAAC,QAAO,CAAE,CAC1D,CAEA,SAASU,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAGA,SAASF,EAAUG,EAAI,CACrB,GAAIA,EAAK,EAAG,CACV,gBACA,MACD,CACD,MAAMC,EAAS,IACTC,EAASD,EAAS,GAClBE,EAAOD,EAAS,GAChBE,EAAMD,EAAO,GAEbE,EAAOP,EAAe,KAAK,MAAME,EAAKI,CAAG,CAAC,EAC1CE,EAAQR,EAAe,KAAK,MAAOE,EAAKI,EAAOD,CAAI,CAAC,EACpDI,EAAUT,EAAe,KAAK,MAAQE,EAAKI,EAAOD,EAAQD,CAAM,CAAC,EACjEM,EAAUV,EAAe,KAAK,MAASE,EAAKI,EAAOD,EAAQD,EAAUD,CAAM,CAAC,EAE5EQ,EAAY,SAAS,cAAc,aAAa,EAChDC,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAe,SAAS,cAAc,gBAAgB,EACtDC,EAAe,SAAS,cAAc,gBAAgB,EAC5DH,EAAU,YAAcJ,EACxBK,EAAW,YAAcJ,EACzBK,EAAa,YAAcJ,EAC3BK,EAAa,YAAcJ,CAC7B"}